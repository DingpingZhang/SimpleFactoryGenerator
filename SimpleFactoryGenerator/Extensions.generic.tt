<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a T4 template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
<# const int count = 8; #>

using System.Collections.Generic;

namespace SimpleFactoryGenerator;

public static partial class Extensions
{
<#
for (int i = 1; i <= count; i++)
{
    string genericList = string.Join(", ", Enumerable.Range(1, i).Select(index => $"T{index}"));
    string parameters = string.Join(", ", Enumerable.Range(1, i).Select(index => $"T{index} x{index}"));
    string args = string.Join(", ", Enumerable.Range(1, i).Select(index => $"x{index}"));
#>
    public static IEnumerable<TProduct> CreateAll<TKey, <#= genericList #>, TProduct>(this ISimpleFactory<TKey, <#= genericList #>, TProduct> factory, <#= parameters #>)
    {
        foreach (var product in SimpleFactory<TKey, TProduct>.Products)
        {
            yield return factory.Create(product.Key, <#= args #>);
        }
    }

<#
}
#>
}
